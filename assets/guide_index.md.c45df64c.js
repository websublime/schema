import{_ as e,c as a,o as t,a as o}from"./app.7bb83f59.js";const _='{"title":"What is Schema?","description":"","frontmatter":{},"headers":[{"level":2,"title":"Motivation","slug":"motivation"},{"level":2,"title":"Forms","slug":"forms"}],"relativePath":"guide/index.md"}',i={},s=o('<h1 id="what-is-schema" tabindex="-1">What is Schema? <a class="header-anchor" href="#what-is-schema" aria-hidden="true">#</a></h1><p>Schema is a set of function to describe a validation model for any javascript object.</p><h2 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-hidden="true">#</a></h2><p>Schema was created to describe a schema validation for javascript models, to be used especially in form validation.</p><p>Is based in the package <code>schema-typed</code> but simplified, and yet very complete.</p><p>All validation rules are async and run async, in order of it definition.</p><p>It also have two ways of validate a model:</p><ul><li><p>From top to bottom. It will validate all object fields.</p></li><li><p>And from bottom to top. It very useful to be used with form validation. When you fill a form with several fields, we don&#39;t all fields to be validation at same time. Only if they are changed.</p></li></ul><h2 id="forms" tabindex="-1">Forms <a class="header-anchor" href="#forms" aria-hidden="true">#</a></h2><p><code>@websublime/forms</code> in another package that combines <code>@websublime/schema</code> and form validation model based on <code>angular</code> forms model, to make form validation easy.</p><p>Please check also <a href="./.html">@websublime/forms</a></p>',11),d=[s];function l(r,n,c,m,h,p){return t(),a("div",null,d)}var u=e(i,[["render",l]]);export{_ as __pageData,u as default};
