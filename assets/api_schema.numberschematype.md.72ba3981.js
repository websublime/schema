import{_ as e,c as t,o as a,a as s}from"./app.7bb83f59.js";const b='{"title":"NumberSchemaType class","description":"","frontmatter":{},"headers":[{"level":2,"title":"NumberSchemaType class","slug":"numberschematype-class"},{"level":2,"title":"Constructors","slug":"constructors"},{"level":2,"title":"Properties","slug":"properties"},{"level":2,"title":"Methods","slug":"methods"}],"relativePath":"api/schema.numberschematype.md"}',r={},h=s(`<p><a href="./">Home</a> &gt; <a href="./schema.html">@websublime/schema</a> &gt; <a href="./schema.numberschematype.html">NumberSchemaType</a></p><h2 id="numberschematype-class" tabindex="-1">NumberSchemaType class <a class="header-anchor" href="#numberschematype-class" aria-hidden="true">#</a></h2><p>Number model type validation</p><p><b>Signature:</b></p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">NumberSchemaType</span> <span class="token keyword">extends</span> <span class="token class-name">BaseSchemaType<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span> 
</code></pre></div><p><b>Extends:</b> <a href="./schema.baseschematype.html">BaseSchemaType</a>&lt;number&gt;</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h2><table><thead><tr><th>Constructor</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.numberschematype._constructor_.html">(constructor)(errorMessage)</a></td><td></td><td>Create NumberSchemaType instance</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.numberschematype.type.html">type</a></td><td></td><td>string</td><td></td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><table><thead><tr><th>Method</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.numberschematype.isinteger.html">isInteger(errorMessage)</a></td><td></td><td>Test if number is integer.</td></tr><tr><td><a href="./schema.numberschematype.isoneof.html">isOneOf(values, errorMessage)</a></td><td></td><td>Test if is one of other types included</td></tr><tr><td><a href="./schema.numberschematype.max.html">max(max, errorMessage)</a></td><td></td><td>Test value if it is lower or equal to maximum value</td></tr><tr><td><a href="./schema.numberschematype.min.html">min(min, errorMessage)</a></td><td></td><td>Test value if great or equal to minimum value</td></tr><tr><td><a href="./schema.numberschematype.pattern.html">pattern(regexp, errorMessage)</a></td><td></td><td>Test a reg expression</td></tr><tr><td><a href="./schema.numberschematype.range.html">range(min, max, errorMessage)</a></td><td></td><td>Test if value is between the range</td></tr></tbody></table>`,12),d=[h];function n(o,c,m,p,i,l){return a(),t("div",null,d)}var y=e(r,[["render",n]]);export{b as __pageData,y as default};
