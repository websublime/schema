import{_ as e,c as t,o as a,a as r}from"./app.7bb83f59.js";const b='{"title":"schema package","description":"","frontmatter":{},"headers":[{"level":2,"title":"schema package","slug":"schema-package"},{"level":2,"title":"Classes","slug":"classes"},{"level":2,"title":"Enumerations","slug":"enumerations"},{"level":2,"title":"Functions","slug":"functions"},{"level":2,"title":"Interfaces","slug":"interfaces"},{"level":2,"title":"Variables","slug":"variables"},{"level":2,"title":"Type Aliases","slug":"type-aliases"}],"relativePath":"api/schema.md"}',h={},s=r('<p><a href="./">Home</a> &gt; <a href="./schema.html">@websublime/schema</a></p><h2 id="schema-package" tabindex="-1">schema package <a class="header-anchor" href="#schema-package" aria-hidden="true">#</a></h2><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-hidden="true">#</a></h2><table><thead><tr><th>Class</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.arrayschematype.html">ArraySchemaType</a></td><td>Array model type validation</td></tr><tr><td><a href="./schema.baseschematype.html">BaseSchemaType</a></td><td>Base type model validation</td></tr><tr><td><a href="./schema.booleanschematype.html">BooleanSchemaType</a></td><td>Boolean type validation</td></tr><tr><td><a href="./schema.dateschematype.html">DateSchemaType</a></td><td>Date model type validation</td></tr><tr><td><a href="./schema.errormodel.html">ErrorModel</a></td><td></td></tr><tr><td><a href="./schema.numberschematype.html">NumberSchemaType</a></td><td>Number model type validation</td></tr><tr><td><a href="./schema.objectschematype.html">ObjectSchemaType</a></td><td>Object model type validation</td></tr><tr><td><a href="./schema.stringschematype.html">StringSchemaType</a></td><td>String model type validation</td></tr></tbody></table><h2 id="enumerations" tabindex="-1">Enumerations <a class="header-anchor" href="#enumerations" aria-hidden="true">#</a></h2><table><thead><tr><th>Enumeration</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.schematype.html">schemaType</a></td><td></td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.arraytype.html">ArrayType(items, errorMessage)</a></td><td>Creates instance ObjectType</td></tr><tr><td><a href="./schema.basetype.html">BaseType(st)</a></td><td>Creates instance MixedType</td></tr><tr><td><a href="./schema.booleantype.html">BooleanType(errorMessage)</a></td><td>Creates instance BooleanType</td></tr><tr><td><a href="./schema.datetype.html">DateType(errorMessage)</a></td><td>Creates instance DateType</td></tr><tr><td><a href="./schema.numbertype.html">NumberType(errorMessage)</a></td><td>Creates instance NumberType</td></tr><tr><td><a href="./schema.objecttype.html">ObjectType(shape, errorMessage)</a></td><td>Creates instance ObjectType</td></tr><tr><td><a href="./schema.stringtype.html">StringType(errorMessage)</a></td><td>Creates instance StringType</td></tr></tbody></table><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-hidden="true">#</a></h2><table><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.checkresult.html">CheckResult</a></td><td>Result from schema validation check.</td></tr><tr><td><a href="./schema.model.html">Model</a></td><td>Model Interface Can implement a toJSON method to use with JSON.stringify</td></tr><tr><td><a href="./schema.rule.html">Rule</a></td><td>Rule signature for validation</td></tr></tbody></table><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h2><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.errormessages.html">errorMessages</a></td><td></td></tr></tbody></table><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a></h2><table><thead><tr><th>Type Alias</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.inferschematype.html">InferSchemaType</a></td><td>Infer which schema type is base on the native type</td></tr><tr><td><a href="./schema.maybe.html">Maybe</a></td><td>One of the values</td></tr><tr><td><a href="./schema.properties.html">Properties</a></td><td>Properties of ObjectSchemaType</td></tr><tr><td><a href="./schema.validationfntype.html">validationFnType</a></td><td>Validation funciton type</td></tr></tbody></table>',14),d=[s];function i(c,l,n,o,m,p){return a(),t("div",null,d)}var f=e(h,[["render",i]]);export{b as __pageData,f as default};
