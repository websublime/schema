import{_ as n,c as a,o as s,a as t}from"./app.7bb83f59.js";const h='{"title":"Getting started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install"},{"level":2,"title":"Usage","slug":"usage"}],"relativePath":"guide/getting-started.md"}',p={},o=t(`<h1 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><p>You can install <code>@websublime/schema</code> via npm or yarn using the following command:</p><div class="language-bash"><pre><code><span class="token function">npm</span> @websublime/schema --save
<span class="token comment"># or</span>
<span class="token function">yarn</span> <span class="token function">add</span> @websublime/schema
</code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>The code below will create a validation schema for a property of type <code>number</code> and create a variable that contains the value <code>10</code>.</p><p>Then it will check if the variable checks with the validation schema.</p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NumberType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@websublime/schema&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">NumberType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">isRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> validation <span class="token operator">=</span> <span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">expect</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>hasError<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Schema validation model for an <code>object</code> type.</p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NumberType<span class="token punctuation">,</span> ObjectType<span class="token punctuation">,</span> StringType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@websublime/schema&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> schemaObject <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ObjectType</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> email<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token function">NumberType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  email<span class="token operator">:</span> <span class="token function">StringType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> validation <span class="token operator">=</span> <span class="token keyword">await</span> schemaObject<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
  email<span class="token operator">:</span> <span class="token string">&#39;schema@websublime.com&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">expect</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>properties<span class="token operator">?.</span>age<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>properties<span class="token operator">?.</span>email<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,10),e=[o];function c(u,i,l,k,r,d){return s(),a("div",null,e)}var f=n(p,[["render",c]]);export{h as __pageData,f as default};
