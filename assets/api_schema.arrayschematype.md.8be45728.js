import{_ as t,c as e,o as a,a as r}from"./app.7bb83f59.js";const g='{"title":"ArraySchemaType class","description":"","frontmatter":{},"headers":[{"level":2,"title":"ArraySchemaType class","slug":"arrayschematype-class"},{"level":2,"title":"Constructors","slug":"constructors"},{"level":2,"title":"Properties","slug":"properties"},{"level":2,"title":"Methods","slug":"methods"}],"relativePath":"api/schema.arrayschematype.md"}',s={},h=r(`<p><a href="./">Home</a> &gt; <a href="./schema.html">@websublime/schema</a> &gt; <a href="./schema.arrayschematype.html">ArraySchemaType</a></p><h2 id="arrayschematype-class" tabindex="-1">ArraySchemaType class <a class="header-anchor" href="#arrayschematype-class" aria-hidden="true">#</a></h2><p>Array model type validation</p><p><b>Signature:</b></p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">ArraySchemaType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">BaseSchemaType<span class="token operator">&lt;</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span> 
</code></pre></div><p><b>Extends:</b> <a href="./schema.baseschematype.html">BaseSchemaType</a>&lt;Array&lt;T&gt;&gt;</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h2><table><thead><tr><th>Constructor</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.arrayschematype._constructor_.html">(constructor)(items, errorMessage)</a></td><td></td><td>Create ArraySchemaType instance</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.arrayschematype.items.html">items</a></td><td></td><td><a href="./schema.inferschematype.html">InferSchemaType</a>&lt;T&gt; | null</td><td>items model type</td></tr><tr><td><a href="./schema.arrayschematype.type.html">type</a></td><td></td><td>string</td><td></td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><table><thead><tr><th>Method</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./schema.arrayschematype.check.html">check(values, parent, context, drill)</a></td><td></td><td>Validate array</td></tr><tr><td><a href="./schema.arrayschematype.maxlength.html">maxLength(maxLength, errorMessage)</a></td><td></td><td>Test array maximum length</td></tr><tr><td><a href="./schema.arrayschematype.minlength.html">minLength(minLength, errorMessage)</a></td><td></td><td>Test array minimum length</td></tr><tr><td><a href="./schema.arrayschematype.of.html">of(items)</a></td><td></td><td>Set items model type</td></tr><tr><td><a href="./schema.arrayschematype.rangelength.html">rangeLength(minLength, maxLength, errorMessage)</a></td><td></td><td>Test if array length is between range</td></tr></tbody></table>`,12),n=[h];function d(c,o,p,l,m,i){return a(),e("div",null,n)}var f=t(s,[["render",d]]);export{g as __pageData,f as default};
