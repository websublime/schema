import{_ as a,c as s,o as n,a as e}from"./app.7bb83f59.js";const i='{"title":"InferSchemaType type","description":"","frontmatter":{},"headers":[{"level":2,"title":"InferSchemaType type","slug":"inferschematype-type"}],"relativePath":"api/schema.inferschematype.md"}',p={},t=e(`<p><a href="./">Home</a> &gt; <a href="./schema.html">@websublime/schema</a> &gt; <a href="./schema.inferschematype.html">InferSchemaType</a></p><h2 id="inferschematype-type" tabindex="-1">InferSchemaType type <a class="header-anchor" href="#inferschematype-type" aria-hidden="true">#</a></h2><p>Infer which schema type is base on the native type</p><p><b>Signature:</b></p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">InferSchemaType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> NumberSchemaType <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> StringSchemaType <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> BooleanSchemaType <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Date</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> DateSchemaType <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> ArraySchemaType<span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> ObjectSchemaType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">:</span> BaseSchemaType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div><p><b>References:</b> <a href="./schema.numberschematype.html">NumberSchemaType</a>, <a href="./schema.stringschematype.html">StringSchemaType</a>, <a href="./schema.booleanschematype.html">BooleanSchemaType</a>, <a href="./schema.dateschematype.html">DateSchemaType</a>, <a href="./schema.arrayschematype.html">ArraySchemaType</a>, <a href="./schema.objectschematype.html">ObjectSchemaType</a>, <a href="./schema.baseschematype.html">BaseSchemaType</a></p>`,6),o=[t];function c(r,l,k,h,m,y){return n(),s("div",null,o)}var u=a(p,[["render",c]]);export{i as __pageData,u as default};
